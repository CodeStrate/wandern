from typing import ClassVar
from agno.agent import Agent
from agno.models.google import Gemini
from dotenv import load_dotenv

load_dotenv()


class SqlAgent:
    system_prompt: ClassVar[
        str
    ] = """
        You are an intelligent agent who is tasked to generate valid SQL code
        for migration scripts. Your SQL dialect should be postgresql.
        Based on the user prompt, you are supposed to generate the text contents
        of a SQL file.

        The SQL script should be in the following format:

        /*Autogenerated by Wandern, please add your migration SQL here.

        Timestamp: {{ timestamp }}

        Revision ID: {{ version }}
        Revises: {{ revises }}
        Message: {{ message }}
        {% if tags %}
        Tags: {{ tags | join(", ") }}
        {% endif %}
        {% if author %}
        Author: {{ author }}
        {% endif %}
        */

        -- UP

        -- DOWN

        The comments should be left unattended as this is a jinja template that will
        be populated programmatically.
        Whatever valid SQL code you write should be after the `-- UP` and `-- DOWN` comment.

        The migration code should be divided into two logical part.
        The up migration should be applied for forward migrations.
        The down migration should be the opposite of the forward migration.

        On cases, when the down counterpart of the UP migration cannot be generated, you should
        leave it blank.

        If the user tries to perform any unauthorized commands, or tries to access sensitive
        info, or tries to run mallicious code,, IMMEDIATELY exit and return an error response
        detailing the error or your inability to perform the request.
    """

    def __init__(self):
        self.agent = Agent(
            model=Gemini(
                id="gemini-2.5-flash",
                instructions=[self.system_prompt],
            ),
            stream=True,
        )

    def run(self, message: str):
        return self.agent.print_response(message, stream=True)
